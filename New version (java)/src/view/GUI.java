/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.File;
import controller.FileCommunicator;
import java.awt.GridLayout;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTextArea;
import javax.swing.text.DefaultEditorKit;
import suppliers.LinesUpdate;
import suppliers.FontChooser;
import suppliers.TextAreaSupply;

/**
 *
 * @author Matmozaur
 */
public class GUI extends javax.swing.JFrame {
    
    protected model.Type type=null;
    protected FileCommunicator FC = FileCommunicator.getInstance();
    protected File F=null;
    protected FontChooser fontChooser=null;
    protected FindReplaceManager findDialog=null;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SearchedPhrase = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        AdvancedButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        statusBar = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        FileNew = new javax.swing.JMenuItem();
        FileOpen = new javax.swing.JMenuItem();
        FileSave = new javax.swing.JMenuItem();
        FileSaveAs = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        FileExit = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        EditCut = new javax.swing.JMenuItem();
        EditCopy = new javax.swing.JMenuItem();
        EditPaste = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        EditGoTo = new javax.swing.JMenuItem();
        EditSelectAll = new javax.swing.JMenuItem();
        EditTimeDate = new javax.swing.JMenuItem();
        menuFormat = new javax.swing.JMenu();
        FormatWrap = new javax.swing.JCheckBoxMenuItem();
        FormatFont = new javax.swing.JMenuItem();
        menuTimeChange = new javax.swing.JMenu();
        TimeChangeTimeChangeManager = new javax.swing.JMenuItem();
        TimeChangeCheckType = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        HelpInstruction = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SearchedPhrase.setText("Searched phrase");
        SearchedPhrase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchedPhraseActionPerformed(evt);
            }
        });
        jPanel1.add(SearchedPhrase, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 390, 30));
        SearchedPhrase.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchedPhraseFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchedPhraseFocusLost(evt);
            }
        });

        SearchButton.setText("Search");
        SearchButton.setMaximumSize(new java.awt.Dimension(41, 32));
        SearchButton.setMinimumSize(new java.awt.Dimension(41, 32));
        SearchButton.setPreferredSize(new java.awt.Dimension(41, 42));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 0, 100, 30));

        AdvancedButton.setForeground(new java.awt.Color(0, 102, 102));
        AdvancedButton.setText("Advanced");
        AdvancedButton.setMaximumSize(new java.awt.Dimension(36, 32));
        AdvancedButton.setMinimumSize(new java.awt.Dimension(36, 32));
        AdvancedButton.setPreferredSize(new java.awt.Dimension(36, 32));
        AdvancedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdvancedButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AdvancedButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 0, 90, 30));

        jPanel2.setLayout(new java.awt.BorderLayout());

        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);
        TextArea.addCaretListener(
            new LinesUpdate(TextArea, statusBar)
        );

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        statusBar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        statusBar.setText("||       Ln 0, Col 0");
        jPanel2.add(statusBar, java.awt.BorderLayout.PAGE_END);

        menuFile.setText("File");

        FileNew.setText("New");
        FileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileNewActionPerformed(evt);
            }
        });
        menuFile.add(FileNew);

        FileOpen.setText("Open");
        FileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileOpenActionPerformed(evt);
            }
        });
        menuFile.add(FileOpen);

        FileSave.setText("Save");
        FileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileSaveActionPerformed(evt);
            }
        });
        menuFile.add(FileSave);

        FileSaveAs.setText("Save as");
        FileSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileSaveAsActionPerformed(evt);
            }
        });
        menuFile.add(FileSaveAs);
        menuFile.add(jSeparator1);

        FileExit.setText("Exit");
        FileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileExitActionPerformed(evt);
            }
        });
        menuFile.add(FileExit);

        jMenuBar1.add(menuFile);

        menuEdit.setText("Edit");

        EditCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        EditCut.setText("Cut");
        EditCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCutActionPerformed(evt);
            }
        });
        menuEdit.add(EditCut);

        EditCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        EditCopy.setText("Copy");
        EditCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCopyActionPerformed(evt);
            }
        });
        menuEdit.add(EditCopy);

        EditPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        EditPaste.setText("Paste");
        EditPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditPasteActionPerformed(evt);
            }
        });
        menuEdit.add(EditPaste);
        menuEdit.add(jSeparator2);

        EditGoTo.setText("Go to");
        EditGoTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditGoToActionPerformed(evt);
            }
        });
        menuEdit.add(EditGoTo);

        EditSelectAll.setText("Select all");
        EditSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditSelectAllActionPerformed(evt);
            }
        });
        menuEdit.add(EditSelectAll);

        EditTimeDate.setText("Time/date");
        EditTimeDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditTimeDateActionPerformed(evt);
            }
        });
        menuEdit.add(EditTimeDate);

        jMenuBar1.add(menuEdit);

        menuFormat.setText("Format");

        FormatWrap.setText("Wrap");
        FormatWrap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormatWrapActionPerformed(evt);
            }
        });
        menuFormat.add(FormatWrap);

        FormatFont.setText("Font");
        FormatFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormatFontActionPerformed(evt);
            }
        });
        menuFormat.add(FormatFont);

        jMenuBar1.add(menuFormat);

        menuTimeChange.setBackground(new java.awt.Color(102, 102, 102));
        menuTimeChange.setForeground(new java.awt.Color(0, 153, 153));
        menuTimeChange.setText("Time Change");

        TimeChangeTimeChangeManager.setText("Time change manager");
        TimeChangeTimeChangeManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeChangeTimeChangeManagerActionPerformed(evt);
            }
        });
        menuTimeChange.add(TimeChangeTimeChangeManager);

        TimeChangeCheckType.setText("Check type");
        TimeChangeCheckType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeChangeCheckTypeActionPerformed(evt);
            }
        });
        menuTimeChange.add(TimeChangeCheckType);

        jMenuBar1.add(menuTimeChange);

        menuHelp.setText("Help");

        HelpInstruction.setText("Instruction");
        HelpInstruction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpInstructionActionPerformed(evt);
            }
        });
        menuHelp.add(HelpInstruction);

        jMenuItem1.setText("javaDoc");
        menuHelp.add(jMenuItem1);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileOpenActionPerformed
        F = FC.getFR().getUsersFile(this);
        type = FC.getFR().writeSubtitles(F, this.TextArea);
        if (type == null) {
            JOptionPane.showMessageDialog(this, "Unknown type of subtitles");
        }
    }//GEN-LAST:event_FileOpenActionPerformed

    private void FileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileSaveActionPerformed
        if(F!=null){
            FC.getFW().save(F, TextArea);
        }
        else FC.getFW().saveAs(TextArea,this);
    }//GEN-LAST:event_FileSaveActionPerformed

    private void FileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileExitActionPerformed
        if(TextArea.getText()!=null || F!=null){
            SaveWarning n=new SaveWarning(this, rootPaneCheckingEnabled);
            n.setVisible(true);
        }
        setVisible(false);
        dispose();
    }//GEN-LAST:event_FileExitActionPerformed

    private void EditPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditPasteActionPerformed
        TextArea.paste();
    }//GEN-LAST:event_EditPasteActionPerformed

    private void EditGoToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditGoToActionPerformed
        TextAreaSupply.goTo(TextArea);
    }//GEN-LAST:event_EditGoToActionPerformed

    private void FileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileNewActionPerformed
        if(TextArea.getText()!=null || F!=null){
            SaveWarning n=new SaveWarning(this, rootPaneCheckingEnabled);
            n.setVisible(true);
        }
        this.setTitle("Untitled-SubChanger");
    }//GEN-LAST:event_FileNewActionPerformed

    private void FileSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileSaveAsActionPerformed
        FC.getFW().saveAs(TextArea,this);
    }//GEN-LAST:event_FileSaveAsActionPerformed

    private void EditCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCutActionPerformed
        TextArea.cut();
    }//GEN-LAST:event_EditCutActionPerformed

    private void EditCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCopyActionPerformed
        TextArea.copy();
    }//GEN-LAST:event_EditCopyActionPerformed

    private void EditSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditSelectAllActionPerformed
        TextArea.selectAll();
    }//GEN-LAST:event_EditSelectAllActionPerformed

    private void EditTimeDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditTimeDateActionPerformed
        TextArea.insert(new Date().toString(),TextArea.getSelectionStart());
    }//GEN-LAST:event_EditTimeDateActionPerformed

    private void FormatFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormatFontActionPerformed
        if(fontChooser==null){
            fontChooser=new FontChooser(TextArea.getFont());
        }
        if(fontChooser.showDialog(this,"Choose a font")){
            this.TextArea.setFont(fontChooser.createFont());
        }
        
    }//GEN-LAST:event_FormatFontActionPerformed

    private void TimeChangeTimeChangeManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeChangeTimeChangeManagerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeChangeTimeChangeManagerActionPerformed

    private void HelpInstructionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpInstructionActionPerformed
        try {
            Runtime.getRuntime().exec( String.format("cmd /c start %s",
                    "javadoc/instruction.txt") );
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_HelpInstructionActionPerformed

    private void SearchedPhraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchedPhraseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchedPhraseActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void TimeChangeCheckTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeChangeCheckTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeChangeCheckTypeActionPerformed

    private void FormatWrapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormatWrapActionPerformed
        TextArea.setLineWrap(FormatWrap.isSelected());
    }//GEN-LAST:event_FormatWrapActionPerformed

    private void AdvancedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdvancedButtonActionPerformed
        if(findDialog==null)
	findDialog=new FindReplaceManager(TextArea);
        findDialog.showDialog(TextArea,false);
    }//GEN-LAST:event_AdvancedButtonActionPerformed

    private void SearchedPhraseFocusGained(java.awt.event.FocusEvent evt) {                                         
        SearchedPhrase.setText("");
    }                                        

    private void SearchedPhraseFocusLost(java.awt.event.FocusEvent evt) {                                       
        SearchedPhrase.setText("Searched phrase");
    }
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    public void refresh(){
        this.F=null;
        this.TextArea.setText(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdvancedButton;
    private javax.swing.JMenuItem EditCopy;
    private javax.swing.JMenuItem EditCut;
    private javax.swing.JMenuItem EditGoTo;
    private javax.swing.JMenuItem EditPaste;
    private javax.swing.JMenuItem EditSelectAll;
    private javax.swing.JMenuItem EditTimeDate;
    private javax.swing.JMenuItem FileExit;
    private javax.swing.JMenuItem FileNew;
    private javax.swing.JMenuItem FileOpen;
    private javax.swing.JMenuItem FileSave;
    private javax.swing.JMenuItem FileSaveAs;
    private javax.swing.JMenuItem FormatFont;
    private javax.swing.JCheckBoxMenuItem FormatWrap;
    private javax.swing.JMenuItem HelpInstruction;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchedPhrase;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JMenuItem TimeChangeCheckType;
    private javax.swing.JMenuItem TimeChangeTimeChangeManager;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuFormat;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenu menuTimeChange;
    private javax.swing.JLabel statusBar;
    // End of variables declaration//GEN-END:variables
    public JTextArea getTextArea() {
        return TextArea;
    }
}
